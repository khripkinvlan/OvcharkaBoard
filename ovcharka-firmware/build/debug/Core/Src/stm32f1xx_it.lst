ARM GAS  C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/stm32f1xx_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB65:
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f1xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f1xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f1xx_it.c ****   *
  16:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f1xx_it.c ****   */
  18:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f1xx_it.c **** 
  20:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f1xx_it.c **** #include "main.h"
  22:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  23:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f1xx_it.c **** 
  27:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f1xx_it.c **** 
  30:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32f1xx_it.c **** 
  32:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s 			page 2


  33:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f1xx_it.c **** 
  35:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f1xx_it.c **** 
  37:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f1xx_it.c **** 
  40:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f1xx_it.c **** 
  42:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f1xx_it.c **** 
  45:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f1xx_it.c **** 
  47:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f1xx_it.c **** 
  50:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f1xx_it.c **** 
  52:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f1xx_it.c **** 
  55:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f1xx_it.c **** 
  57:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  59:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_rx;
  60:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_tx;
  61:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim3;
  62:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  63:Core/Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  64:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  65:Core/Src/stm32f1xx_it.c **** 
  66:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  67:Core/Src/stm32f1xx_it.c **** 
  68:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  69:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  70:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  71:Core/Src/stm32f1xx_it.c **** /**
  72:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Core/Src/stm32f1xx_it.c ****   */
  74:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  75:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 75 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  76:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Core/Src/stm32f1xx_it.c **** 
  78:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f1xx_it.c ****    while (1)
  34              		.loc 1 80 4 view .LVU1
  81:Core/Src/stm32f1xx_it.c ****   {
ARM GAS  C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s 			page 3


  82:Core/Src/stm32f1xx_it.c ****   }
  35              		.loc 1 82 3 view .LVU2
  80:Core/Src/stm32f1xx_it.c ****   {
  36              		.loc 1 80 10 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE65:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB66:
  83:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32f1xx_it.c **** }
  85:Core/Src/stm32f1xx_it.c **** 
  86:Core/Src/stm32f1xx_it.c **** /**
  87:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  88:Core/Src/stm32f1xx_it.c ****   */
  89:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  90:Core/Src/stm32f1xx_it.c **** {
  50              		.loc 1 90 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  91:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  92:Core/Src/stm32f1xx_it.c **** 
  93:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  94:Core/Src/stm32f1xx_it.c ****   while (1)
  57              		.loc 1 94 3 view .LVU5
  95:Core/Src/stm32f1xx_it.c ****   {
  96:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Core/Src/stm32f1xx_it.c ****   }
  58              		.loc 1 98 3 view .LVU6
  94:Core/Src/stm32f1xx_it.c ****   {
  59              		.loc 1 94 9 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE66:
  64              		.section	.text.MemManage_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	MemManage_Handler
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	MemManage_Handler:
  72              	.LFB67:
  99:Core/Src/stm32f1xx_it.c **** }
 100:Core/Src/stm32f1xx_it.c **** 
 101:Core/Src/stm32f1xx_it.c **** /**
 102:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
ARM GAS  C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s 			page 4


 103:Core/Src/stm32f1xx_it.c ****   */
 104:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 105:Core/Src/stm32f1xx_it.c **** {
  73              		.loc 1 105 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L6:
 106:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f1xx_it.c **** 
 108:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f1xx_it.c ****   while (1)
  80              		.loc 1 109 3 view .LVU9
 110:Core/Src/stm32f1xx_it.c ****   {
 111:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f1xx_it.c ****   }
  81              		.loc 1 113 3 view .LVU10
 109:Core/Src/stm32f1xx_it.c ****   {
  82              		.loc 1 109 9 view .LVU11
  83 0000 FEE7     		b	.L6
  84              		.cfi_endproc
  85              	.LFE67:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  94              	BusFault_Handler:
  95              	.LFB68:
 114:Core/Src/stm32f1xx_it.c **** }
 115:Core/Src/stm32f1xx_it.c **** 
 116:Core/Src/stm32f1xx_it.c **** /**
 117:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 118:Core/Src/stm32f1xx_it.c ****   */
 119:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 120:Core/Src/stm32f1xx_it.c **** {
  96              		.loc 1 120 1 view -0
  97              		.cfi_startproc
  98              		@ Volatile: function does not return.
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.L8:
 121:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Core/Src/stm32f1xx_it.c **** 
 123:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Core/Src/stm32f1xx_it.c ****   while (1)
 103              		.loc 1 124 3 view .LVU13
 125:Core/Src/stm32f1xx_it.c ****   {
 126:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 128:Core/Src/stm32f1xx_it.c ****   }
 104              		.loc 1 128 3 view .LVU14
ARM GAS  C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s 			page 5


 124:Core/Src/stm32f1xx_it.c ****   {
 105              		.loc 1 124 9 view .LVU15
 106 0000 FEE7     		b	.L8
 107              		.cfi_endproc
 108              	.LFE68:
 110              		.section	.text.UsageFault_Handler,"ax",%progbits
 111              		.align	1
 112              		.global	UsageFault_Handler
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	UsageFault_Handler:
 118              	.LFB69:
 129:Core/Src/stm32f1xx_it.c **** }
 130:Core/Src/stm32f1xx_it.c **** 
 131:Core/Src/stm32f1xx_it.c **** /**
 132:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Core/Src/stm32f1xx_it.c ****   */
 134:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 135:Core/Src/stm32f1xx_it.c **** {
 119              		.loc 1 135 1 view -0
 120              		.cfi_startproc
 121              		@ Volatile: function does not return.
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              	.L10:
 136:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Core/Src/stm32f1xx_it.c **** 
 138:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Core/Src/stm32f1xx_it.c ****   while (1)
 126              		.loc 1 139 3 view .LVU17
 140:Core/Src/stm32f1xx_it.c ****   {
 141:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32f1xx_it.c ****   }
 127              		.loc 1 143 3 view .LVU18
 139:Core/Src/stm32f1xx_it.c ****   {
 128              		.loc 1 139 9 view .LVU19
 129 0000 FEE7     		b	.L10
 130              		.cfi_endproc
 131              	.LFE69:
 133              		.section	.text.SVC_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	SVC_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	SVC_Handler:
 141              	.LFB70:
 144:Core/Src/stm32f1xx_it.c **** }
 145:Core/Src/stm32f1xx_it.c **** 
 146:Core/Src/stm32f1xx_it.c **** /**
 147:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 148:Core/Src/stm32f1xx_it.c ****   */
 149:Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 150:Core/Src/stm32f1xx_it.c **** {
ARM GAS  C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s 			page 6


 142              		.loc 1 150 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 151:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 152:Core/Src/stm32f1xx_it.c **** 
 153:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 154:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 155:Core/Src/stm32f1xx_it.c **** 
 156:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 157:Core/Src/stm32f1xx_it.c **** }
 147              		.loc 1 157 1 view .LVU21
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE70:
 152              		.section	.text.DebugMon_Handler,"ax",%progbits
 153              		.align	1
 154              		.global	DebugMon_Handler
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	DebugMon_Handler:
 160              	.LFB71:
 158:Core/Src/stm32f1xx_it.c **** 
 159:Core/Src/stm32f1xx_it.c **** /**
 160:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 161:Core/Src/stm32f1xx_it.c ****   */
 162:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 163:Core/Src/stm32f1xx_it.c **** {
 161              		.loc 1 163 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 164:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 165:Core/Src/stm32f1xx_it.c **** 
 166:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 167:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 168:Core/Src/stm32f1xx_it.c **** 
 169:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 170:Core/Src/stm32f1xx_it.c **** }
 166              		.loc 1 170 1 view .LVU23
 167 0000 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE71:
 171              		.section	.text.PendSV_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	PendSV_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	PendSV_Handler:
 179              	.LFB72:
 171:Core/Src/stm32f1xx_it.c **** 
 172:Core/Src/stm32f1xx_it.c **** /**
 173:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
ARM GAS  C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s 			page 7


 174:Core/Src/stm32f1xx_it.c ****   */
 175:Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 176:Core/Src/stm32f1xx_it.c **** {
 180              		.loc 1 176 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 177:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 178:Core/Src/stm32f1xx_it.c **** 
 179:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 180:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 181:Core/Src/stm32f1xx_it.c **** 
 182:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 183:Core/Src/stm32f1xx_it.c **** }
 185              		.loc 1 183 1 view .LVU25
 186 0000 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE72:
 190              		.section	.text.SysTick_Handler,"ax",%progbits
 191              		.align	1
 192              		.global	SysTick_Handler
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	SysTick_Handler:
 198              	.LFB73:
 184:Core/Src/stm32f1xx_it.c **** 
 185:Core/Src/stm32f1xx_it.c **** /**
 186:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 187:Core/Src/stm32f1xx_it.c ****   */
 188:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 189:Core/Src/stm32f1xx_it.c **** {
 199              		.loc 1 189 1 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 3, -8
 206              		.cfi_offset 14, -4
 190:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 191:Core/Src/stm32f1xx_it.c **** 
 192:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 193:Core/Src/stm32f1xx_it.c ****   HAL_IncTick();
 207              		.loc 1 193 3 view .LVU27
 208 0002 FFF7FEFF 		bl	HAL_IncTick
 209              	.LVL0:
 194:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 195:Core/Src/stm32f1xx_it.c **** 
 196:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 197:Core/Src/stm32f1xx_it.c **** }
 210              		.loc 1 197 1 is_stmt 0 view .LVU28
 211 0006 08BD     		pop	{r3, pc}
 212              		.cfi_endproc
 213              	.LFE73:
 215              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
ARM GAS  C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s 			page 8


 216              		.align	1
 217              		.global	DMA1_Channel1_IRQHandler
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 222              	DMA1_Channel1_IRQHandler:
 223              	.LFB74:
 198:Core/Src/stm32f1xx_it.c **** 
 199:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 200:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 201:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 202:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 203:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 204:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 205:Core/Src/stm32f1xx_it.c **** 
 206:Core/Src/stm32f1xx_it.c **** /**
 207:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel1 global interrupt.
 208:Core/Src/stm32f1xx_it.c ****   */
 209:Core/Src/stm32f1xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 210:Core/Src/stm32f1xx_it.c **** {
 224              		.loc 1 210 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 08B5     		push	{r3, lr}
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 3, -8
 231              		.cfi_offset 14, -4
 211:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 212:Core/Src/stm32f1xx_it.c **** 
 213:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 214:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 232              		.loc 1 214 3 view .LVU30
 233 0002 0248     		ldr	r0, .L18
 234 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 235              	.LVL1:
 215:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 216:Core/Src/stm32f1xx_it.c **** 
 217:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 218:Core/Src/stm32f1xx_it.c **** }
 236              		.loc 1 218 1 is_stmt 0 view .LVU31
 237 0008 08BD     		pop	{r3, pc}
 238              	.L19:
 239 000a 00BF     		.align	2
 240              	.L18:
 241 000c 00000000 		.word	hdma_adc1
 242              		.cfi_endproc
 243              	.LFE74:
 245              		.section	.text.DMA1_Channel2_IRQHandler,"ax",%progbits
 246              		.align	1
 247              		.global	DMA1_Channel2_IRQHandler
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 252              	DMA1_Channel2_IRQHandler:
 253              	.LFB75:
 219:Core/Src/stm32f1xx_it.c **** 
ARM GAS  C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s 			page 9


 220:Core/Src/stm32f1xx_it.c **** /**
 221:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel2 global interrupt.
 222:Core/Src/stm32f1xx_it.c ****   */
 223:Core/Src/stm32f1xx_it.c **** void DMA1_Channel2_IRQHandler(void)
 224:Core/Src/stm32f1xx_it.c **** {
 254              		.loc 1 224 1 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 08B5     		push	{r3, lr}
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 3, -8
 261              		.cfi_offset 14, -4
 225:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 0 */
 226:Core/Src/stm32f1xx_it.c **** 
 227:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 0 */
 228:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_rx);
 262              		.loc 1 228 3 view .LVU33
 263 0002 0248     		ldr	r0, .L22
 264 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 265              	.LVL2:
 229:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_IRQn 1 */
 230:Core/Src/stm32f1xx_it.c **** 
 231:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel2_IRQn 1 */
 232:Core/Src/stm32f1xx_it.c **** }
 266              		.loc 1 232 1 is_stmt 0 view .LVU34
 267 0008 08BD     		pop	{r3, pc}
 268              	.L23:
 269 000a 00BF     		.align	2
 270              	.L22:
 271 000c 00000000 		.word	hdma_spi1_rx
 272              		.cfi_endproc
 273              	.LFE75:
 275              		.section	.text.DMA1_Channel3_IRQHandler,"ax",%progbits
 276              		.align	1
 277              		.global	DMA1_Channel3_IRQHandler
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 282              	DMA1_Channel3_IRQHandler:
 283              	.LFB76:
 233:Core/Src/stm32f1xx_it.c **** 
 234:Core/Src/stm32f1xx_it.c **** /**
 235:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel3 global interrupt.
 236:Core/Src/stm32f1xx_it.c ****   */
 237:Core/Src/stm32f1xx_it.c **** void DMA1_Channel3_IRQHandler(void)
 238:Core/Src/stm32f1xx_it.c **** {
 284              		.loc 1 238 1 is_stmt 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288 0000 08B5     		push	{r3, lr}
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 3, -8
 291              		.cfi_offset 14, -4
 239:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */
 240:Core/Src/stm32f1xx_it.c **** 
ARM GAS  C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s 			page 10


 241:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 0 */
 242:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_tx);
 292              		.loc 1 242 3 view .LVU36
 293 0002 0248     		ldr	r0, .L26
 294 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 295              	.LVL3:
 243:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel3_IRQn 1 */
 244:Core/Src/stm32f1xx_it.c **** 
 245:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel3_IRQn 1 */
 246:Core/Src/stm32f1xx_it.c **** }
 296              		.loc 1 246 1 is_stmt 0 view .LVU37
 297 0008 08BD     		pop	{r3, pc}
 298              	.L27:
 299 000a 00BF     		.align	2
 300              	.L26:
 301 000c 00000000 		.word	hdma_spi1_tx
 302              		.cfi_endproc
 303              	.LFE76:
 305              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 306              		.align	1
 307              		.global	DMA1_Channel4_IRQHandler
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 312              	DMA1_Channel4_IRQHandler:
 313              	.LFB77:
 247:Core/Src/stm32f1xx_it.c **** 
 248:Core/Src/stm32f1xx_it.c **** /**
 249:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel4 global interrupt.
 250:Core/Src/stm32f1xx_it.c ****   */
 251:Core/Src/stm32f1xx_it.c **** void DMA1_Channel4_IRQHandler(void)
 252:Core/Src/stm32f1xx_it.c **** {
 314              		.loc 1 252 1 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318 0000 08B5     		push	{r3, lr}
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 3, -8
 321              		.cfi_offset 14, -4
 253:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
 254:Core/Src/stm32f1xx_it.c **** 
 255:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
 256:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 322              		.loc 1 256 3 view .LVU39
 323 0002 0248     		ldr	r0, .L30
 324 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 325              	.LVL4:
 257:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 258:Core/Src/stm32f1xx_it.c **** 
 259:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 260:Core/Src/stm32f1xx_it.c **** }
 326              		.loc 1 260 1 is_stmt 0 view .LVU40
 327 0008 08BD     		pop	{r3, pc}
 328              	.L31:
 329 000a 00BF     		.align	2
 330              	.L30:
ARM GAS  C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s 			page 11


 331 000c 00000000 		.word	hdma_usart1_tx
 332              		.cfi_endproc
 333              	.LFE77:
 335              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 336              		.align	1
 337              		.global	DMA1_Channel5_IRQHandler
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	DMA1_Channel5_IRQHandler:
 343              	.LFB78:
 261:Core/Src/stm32f1xx_it.c **** 
 262:Core/Src/stm32f1xx_it.c **** /**
 263:Core/Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel5 global interrupt.
 264:Core/Src/stm32f1xx_it.c ****   */
 265:Core/Src/stm32f1xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 266:Core/Src/stm32f1xx_it.c **** {
 344              		.loc 1 266 1 is_stmt 1 view -0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 08B5     		push	{r3, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 3, -8
 351              		.cfi_offset 14, -4
 267:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 268:Core/Src/stm32f1xx_it.c **** 
 269:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 270:Core/Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 352              		.loc 1 270 3 view .LVU42
 353 0002 0248     		ldr	r0, .L34
 354 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 355              	.LVL5:
 271:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 272:Core/Src/stm32f1xx_it.c **** 
 273:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 274:Core/Src/stm32f1xx_it.c **** }
 356              		.loc 1 274 1 is_stmt 0 view .LVU43
 357 0008 08BD     		pop	{r3, pc}
 358              	.L35:
 359 000a 00BF     		.align	2
 360              	.L34:
 361 000c 00000000 		.word	hdma_usart1_rx
 362              		.cfi_endproc
 363              	.LFE78:
 365              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 366              		.align	1
 367              		.global	TIM3_IRQHandler
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 372              	TIM3_IRQHandler:
 373              	.LFB79:
 275:Core/Src/stm32f1xx_it.c **** 
 276:Core/Src/stm32f1xx_it.c **** /**
 277:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 278:Core/Src/stm32f1xx_it.c ****   */
ARM GAS  C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s 			page 12


 279:Core/Src/stm32f1xx_it.c **** void TIM3_IRQHandler(void)
 280:Core/Src/stm32f1xx_it.c **** {
 374              		.loc 1 280 1 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378 0000 08B5     		push	{r3, lr}
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 3, -8
 381              		.cfi_offset 14, -4
 281:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 282:Core/Src/stm32f1xx_it.c **** 
 283:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 284:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 382              		.loc 1 284 3 view .LVU45
 383 0002 0248     		ldr	r0, .L38
 384 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 385              	.LVL6:
 285:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 286:Core/Src/stm32f1xx_it.c **** 
 287:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 288:Core/Src/stm32f1xx_it.c **** }
 386              		.loc 1 288 1 is_stmt 0 view .LVU46
 387 0008 08BD     		pop	{r3, pc}
 388              	.L39:
 389 000a 00BF     		.align	2
 390              	.L38:
 391 000c 00000000 		.word	htim3
 392              		.cfi_endproc
 393              	.LFE79:
 395              		.text
 396              	.Letext0:
 397              		.file 2 "C:/Users/zhmis/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 398              		.file 3 "C:/Users/zhmis/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-to
 399              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 400              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 401              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 402              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 403              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:19     .text.NMI_Handler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:42     .text.HardFault_Handler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:65     .text.MemManage_Handler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:71     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:88     .text.BusFault_Handler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:94     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:111    .text.UsageFault_Handler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:117    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:134    .text.SVC_Handler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:140    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:153    .text.DebugMon_Handler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:159    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:172    .text.PendSV_Handler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:178    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:191    .text.SysTick_Handler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:197    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:216    .text.DMA1_Channel1_IRQHandler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:222    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:241    .text.DMA1_Channel1_IRQHandler:0000000c $d
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:246    .text.DMA1_Channel2_IRQHandler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:252    .text.DMA1_Channel2_IRQHandler:00000000 DMA1_Channel2_IRQHandler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:271    .text.DMA1_Channel2_IRQHandler:0000000c $d
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:276    .text.DMA1_Channel3_IRQHandler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:282    .text.DMA1_Channel3_IRQHandler:00000000 DMA1_Channel3_IRQHandler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:301    .text.DMA1_Channel3_IRQHandler:0000000c $d
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:306    .text.DMA1_Channel4_IRQHandler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:312    .text.DMA1_Channel4_IRQHandler:00000000 DMA1_Channel4_IRQHandler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:331    .text.DMA1_Channel4_IRQHandler:0000000c $d
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:336    .text.DMA1_Channel5_IRQHandler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:342    .text.DMA1_Channel5_IRQHandler:00000000 DMA1_Channel5_IRQHandler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:361    .text.DMA1_Channel5_IRQHandler:0000000c $d
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:366    .text.TIM3_IRQHandler:00000000 $t
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:372    .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
C:\Users\zhmis\AppData\Local\Temp\ccNuAPxy.s:391    .text.TIM3_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_adc1
hdma_spi1_rx
hdma_spi1_tx
hdma_usart1_tx
hdma_usart1_rx
HAL_TIM_IRQHandler
htim3
